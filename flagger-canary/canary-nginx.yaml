apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: nginx
spec:
  # deployment reference
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx
  # the maximum time in seconds for the canary deployment
  # to make progress before it is rollback (default 600s)
  progressDeadlineSeconds: 60
  # HPA reference (optional)
  # autoscalerRef:
  #   apiVersion: autoscaling/v2beta2
  #   kind: HorizontalPodAutoscaler
  #   name: podinfo
  service:
    # service port number
    port: 80
    # container port number or name (optional)
    targetPort: 80
    # port name can be http or grpc (default http)
    portName: http
    # add all the other container ports
    # to the ClusterIP services (default false)
    portDiscovery: true
    # HTTP match conditions (optional)
    # match:
    #   - uri:
    #       prefix: /
    # HTTP rewrite (optional)
    # rewrite:
    #   uri: /
    # request timeout (optional)
    # timeout: 5s
    # Istio gateways (optional)
    gateways:
    - tls-redirect.istio-system.svc.cluster.local
    # Istio virtual service host names (optional)
    hosts:
    - nginx.fredcorp.com
    # Istio retry policy (optional)
    # Istio traffic policy (optional)
    trafficPolicy:
      tls:
        # use ISTIO_MUTUAL when mTLS is enabled
        mode: DISABLE
    retries:
      attempts: 3
      perTryTimeout: 1s
      retryOn: "gateway-error,connect-failure,refused-stream"
  # promote the canary without analysing it (default false)
  skipAnalysis: false
  analysis:
    # schedule interval (default 60s)
    interval: 30s
    # max number of failed metric checks before rollback
    threshold: 5
    # max traffic percentage routed to canary
    # percentage (0-100)
    maxWeight: 50
    # canary increment step
    # percentage (0-100)
    stepWeight: 10
    # promotion increment step (default 100)
    # percentage (0-100)
    stepWeightPromotion: 100
    # validation (optional)
    metrics:
    - name: request-success-rate
      # builtin Prometheus check
      # minimum req success rate (non 5xx responses)
      # percentage (0-100)
      thresholdRange:
        min: 99
      interval: 1m
    - name: request-duration
      # builtin Prometheus check
      # maximum req duration P99
      # milliseconds
      thresholdRange:
        max: 500
      interval: 30s
    - name: "database connections"
      # custom metric check
      templateRef:
        name: db-connections
      thresholdRange:
        min: 2
        max: 100
      interval: 1m
    # # testing (optional)
    # webhooks:
    #   - name: "conformance test"
    #     type: pre-rollout
    #     url: http://flagger-helmtester.test/
    #     timeout: 5m
    #     metadata:
    #       type: "helmv3"
    #       cmd: "test run podinfo -n test"
    #   - name: "load test"
    #     type: rollout
    #     url: http://flagger-loadtester.test/
    #     metadata:
    #       cmd: "hey -z 1m -q 10 -c 2 http://podinfo.test:9898/"
    # # alerting (optional)
    # alerts:
    #   - name: "dev team Slack"
    #     severity: error
    #     providerRef:
    #       name: dev-slack
    #       namespace: flagger
    #   - name: "qa team Discord"
    #     severity: warn
    #     providerRef:
    #       name: qa-discord
    #   - name: "on-call MS Teams"
    #     severity: info
    #     providerRef:
    #       name: on-call-msteams